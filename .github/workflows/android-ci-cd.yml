name: Android CI/CD Workflow

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to the main branch

jobs:
  build:
    name: Job one - Build and Test
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Step one - Checkout the code
      uses: actions/checkout@v3

    # Step 2: Set up JDK
    - name: Step two - Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    # Step 2.1: Install Android SDK
   - name: Install Android SDK
     run: |
      mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
      cd "$ANDROID_SDK_ROOT/cmdline-tools"
      curl -sSLo sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
      unzip -q sdk-tools.zip
      mv cmdline-tools latest
      rm sdk-tools.zip
      echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
      echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
      echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

    # Step 2.2: Install Cmake and NDK
    - name: Install Android SDK, NDK, and CMake
      run: |
        sdkmanager --install "cmake;3.31.4"
        sdkmanager --install "ndk;25.1.8937393"

    # Step 3: Cache Gradle dependencies
    - name: Step three - Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle

    # Step 4: Build the project
    - name: Step four - Build the project with Gradle
      run: ./gradlew build

    # Step 5: Run tests
    - name: Step five - Run Unit Tests
      run: ./gradlew test

  deploy:
    name: Job two - Deploy to Firebase
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only deploy on the main branch

    steps:
    # Step 1: Checkout the code
    - name: Step one - Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up JDK
    - name: Step two - Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    # Step 3: Upload to Firebase
    #- name: Step three - Deploy to Firebase App Distribution
    #  uses: wzieba/Firebase-Distribution-Github-Action@v1
    #  with:
    #    appId: ${{ secrets.FIREBASE_APP_ID }}
    #    token: ${{ secrets.FIREBASE_AUTH_TOKEN }}
    #    groups: beta-testers
    #    file: app/build/outputs/apk/release/app-release.apk

